/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
/**
 * ID lister.
 */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

	/** End of File. */
	int EOF = 0;
	/** RegularExpression Id. */
	int LET = 1;
	/** RegularExpression Id. */
	int IF = 2;
	/** RegularExpression Id. */
	int ELSE = 3;
	/** RegularExpression Id. */
	int WHILE = 4;
	/** RegularExpression Id. */
	int PRINTLN = 5;
	/** RegularExpression Id. */
	int TRUE = 6;
	/** RegularExpression Id. */
	int FALSE = 7;
	/** RegularExpression Id. */
	int Num = 8;
	/** RegularExpression Id. */
	int PLUS = 9;
	/** RegularExpression Id. */
	int MINUS = 10;
	/** RegularExpression Id. */
	int TIMES = 11;
	/** RegularExpression Id. */
	int DIV = 12;
	/** RegularExpression Id. */
	int OR = 13;
	/** RegularExpression Id. */
	int AND = 14;
	/** RegularExpression Id. */
	int NOT = 15;
	/** RegularExpression Id. */
	int LTE = 16;
	/** RegularExpression Id. */
	int LT = 17;
	/** RegularExpression Id. */
	int GTE = 18;
	/** RegularExpression Id. */
	int GT = 19;
	/** RegularExpression Id. */
	int EQ = 20;
	/** RegularExpression Id. */
	int DIFF = 21;
	/** RegularExpression Id. */
	int LPAR = 22;
	/** RegularExpression Id. */
	int RPAR = 23;
	/** RegularExpression Id. */
	int LCURLY = 24;
	/** RegularExpression Id. */
	int RCURLY = 25;
	/** RegularExpression Id. */
	int EQUALS = 26;
	/** RegularExpression Id. */
	int DOTCOMMA = 27;
	/** RegularExpression Id. */
	int COMMA = 28;
	/** RegularExpression Id. */
	int TWODOTS = 29;
	/** RegularExpression Id. */
	int FUN = 30;
	/** RegularExpression Id. */
	int ARROW = 31;
	/** RegularExpression Id. */
	int NEW = 32;
	/** RegularExpression Id. */
	int REF = 33;
	/** RegularExpression Id. */
	int ASSIGN = 34;
	/** RegularExpression Id. */
	int DEREFERENCE = 35;
	/** RegularExpression Id. */
	int Id = 36;

	/** Lexical state. */
	int DEFAULT = 0;

	/** Literal token values. */
	String[] tokenImage = {
			"<EOF>",
			"\"let\"",
			"\"if\"",
			"\"else\"",
			"\"while\"",
			"\"println\"",
			"\"true\"",
			"\"false\"",
			"<Num>",
			"\"+\"",
			"\"-\"",
			"\"*\"",
			"\"/\"",
			"\"||\"",
			"\"&&\"",
			"\"not\"",
			"\"<=\"",
			"\"<\"",
			"\">=\"",
			"\">\"",
			"\"==\"",
			"\"!=\"",
			"\"(\"",
			"\")\"",
			"\"{\"",
			"\"}\"",
			"\"=\"",
			"\";\"",
			"\",\"",
			"\":\"",
			"\"fn\"",
			"\"->\"",
			"\"new\"",
			"\"Ref\"",
			"\":=\"",
			"\"!\"",
			"<Id>",
			"\" \"",
			"\"\\t\"",
			"\"\\n\"",
			"\"\\r\"",
	};

}
