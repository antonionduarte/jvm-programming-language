/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
/** ID lister. */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LET = 1;
  /** RegularExpression Id. */
  int IF = 2;
  /** RegularExpression Id. */
  int ELSE = 3;
  /** RegularExpression Id. */
  int WHILE = 4;
  /** RegularExpression Id. */
  int PRINTLN = 5;
  /** RegularExpression Id. */
  int TRUE = 6;
  /** RegularExpression Id. */
  int FALSE = 7;
  /** RegularExpression Id. */
  int Num = 8;
  /** RegularExpression Id. */
  int PLUS = 9;
  /** RegularExpression Id. */
  int MINUS = 10;
  /** RegularExpression Id. */
  int TIMES = 11;
  /** RegularExpression Id. */
  int DOT = 12;
  /** RegularExpression Id. */
  int DIV = 13;
  /** RegularExpression Id. */
  int OR = 14;
  /** RegularExpression Id. */
  int AND = 15;
  /** RegularExpression Id. */
  int NOT = 16;
  /** RegularExpression Id. */
  int LTE = 17;
  /** RegularExpression Id. */
  int LT = 18;
  /** RegularExpression Id. */
  int GTE = 19;
  /** RegularExpression Id. */
  int GT = 20;
  /** RegularExpression Id. */
  int EQ = 21;
  /** RegularExpression Id. */
  int DIFF = 22;
  /** RegularExpression Id. */
  int LPAR = 23;
  /** RegularExpression Id. */
  int RPAR = 24;
  /** RegularExpression Id. */
  int LCURLY = 25;
  /** RegularExpression Id. */
  int RCURLY = 26;
  /** RegularExpression Id. */
  int EQUALS = 27;
  /** RegularExpression Id. */
  int DOTCOMMA = 28;
  /** RegularExpression Id. */
  int COMMA = 29;
  /** RegularExpression Id. */
  int TWODOTS = 30;
  /** RegularExpression Id. */
  int FUN = 31;
  /** RegularExpression Id. */
  int ARROW = 32;
  /** RegularExpression Id. */
  int NEW = 33;
  /** RegularExpression Id. */
  int STRUCT = 34;
  /** RegularExpression Id. */
  int REF = 35;
  /** RegularExpression Id. */
  int ASSIGN = 36;
  /** RegularExpression Id. */
  int DEREFERENCE = 37;
  /** RegularExpression Id. */
  int Id = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"let\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"println\"",
    "\"true\"",
    "\"false\"",
    "<Num>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\".\"",
    "\"/\"",
    "\"||\"",
    "\"&&\"",
    "\"not\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"==\"",
    "\"!=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\";\"",
    "\",\"",
    "\":\"",
    "\"fn\"",
    "\"->\"",
    "\"new\"",
    "\"struct\"",
    "\"Ref\"",
    "\":=\"",
    "\"!\"",
    "<Id>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
  };

}
